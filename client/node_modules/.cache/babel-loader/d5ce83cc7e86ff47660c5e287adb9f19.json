{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFail, signOutSuccess, signOutFail, signUpSuccess, signUpFail } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFail(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFail(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    put(signInFail(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFail","signOutSuccess","signOutFail","signUpSuccess","signUpFail","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signOut","signUp","payload","email","password","displayName","createUserWithEmailAndPassword","signInAfterSignUp","isUserAuthenticated","signInWithEmail","signInWithEmailAndPassword","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport {signInSuccess, signInFail, signOutSuccess, signOutFail, signUpSuccess ,signUpFail} from './user.actions'\n\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils'\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {        \n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n        const userSnapshot = yield userRef.get()\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch (error) {\n        yield put(signInFail(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider)\n        yield getSnapshotFromUserAuth(user)\n    } catch (error) {\n        yield put(signInFail(error))\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut()\n        yield put(signOutSuccess())\n    } catch(error) {\n        yield put(signOutFail(error))\n    }\n}\n\nexport function* signUp({payload: {email, password, displayName}}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\n    }catch(error) {\n        yield put(signUpFail(error))\n    }\n}\n\nexport function* signInAfterSignUp({payload: { user, additionalData}}) {\n    yield getSnapshotFromUserAuth(user, additionalData)\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = getCurrentUser()\n        if(!userAuth) return\n        yield getSnapshotFromUserAuth(userAuth)\n    } catch (error) {\n        yield put(signInFail(error))\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        yield getSnapshotFromUserAuth(user)        \n    }catch(err) {\n        put(signInFail (err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart), \n        call(isUserAuthenticated),\n        call(onSignOutStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}