{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",\n  authDomain: \"coden-e5cdc.firebaseapp.com\",\n  databaseURL: \"https://coden-e5cdc.firebaseio.com\",\n  projectId: \"coden-e5cdc\",\n  storageBucket: \"coden-e5cdc.appspot.com\",\n  messagingSenderId: \"948826769697\",\n  appId: \"1:948826769697:web:c3ec5586fb5fcde5fb5660\",\n  measurementId: \"G-2K6EHCXZJ3\"\n};\nfirebase.initializeApp(firebaseConfig); // firebase.analytics();\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = user;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.error('Error creating user:', err);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","user","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","err","console","error","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,WAAW,EAAE,oCAHM;AAInBC,EAAAA,SAAS,EAAE,aAJQ;AAKnBC,EAAAA,aAAa,EAAE,yBALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,E,CACA;;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AACrE,MAAI,CAACD,IAAL,EAAW;AACX,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,IAAI,CAACK,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,IAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAMa,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCF,GAAtC;AACH;AACJ;;AAED,SAAOZ,OAAP;AACH,CAtBM;AAwBP,OAAO,MAAMe,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",\n    authDomain: \"coden-e5cdc.firebaseapp.com\",\n    databaseURL: \"https://coden-e5cdc.firebaseio.com\",\n    projectId: \"coden-e5cdc\",\n    storageBucket: \"coden-e5cdc.appspot.com\",\n    messagingSenderId: \"948826769697\",\n    appId: \"1:948826769697:web:c3ec5586fb5fcde5fb5660\",\n    measurementId: \"G-2K6EHCXZJ3\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics();\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n    if (!user) return\n    const userRef = firestore.doc(`users/${user.uid}`)\n    const snapshot = await userRef.get()\n\n    if (!snapshot.exists) {\n        const {displayName, email} = user\n        const createdAt = new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(err) {\n            console.error('Error creating user:', err);\n        }\n    }\n\n    return userRef\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({prompt: 'select_account'})\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}