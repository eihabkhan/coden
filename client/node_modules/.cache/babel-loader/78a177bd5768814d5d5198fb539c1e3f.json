{"ast":null,"code":"import { takeLatest, put, all, call, take } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFail, emailSignInSuccess, emailSignInFail } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument(user));\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    yield put(googleSignInFail(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument(user));\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (err) {\n    put(emailSignInFail(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","take","UserActionTypes","googleSignInSuccess","googleSignInFail","emailSignInSuccess","emailSignInFail","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,mBAAR,EAA6BC,gBAA7B,EAA+CC,kBAA/C,EAAmEC,eAAnE,QAAyF,gBAAzF;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAyB,CAACE,IAAD,CAA1B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACK,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG;AAAvC,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMpB,GAAG,CAACM,gBAAgB,CAACc,KAAD,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAyB,CAACE,IAAD,CAA1B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACO,kBAAkB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG;AAAvC,KAAD,CAAnB,CAAT;AAEH,GAND,CAMC,OAAMO,GAAN,EAAW;AACR1B,IAAAA,GAAG,CAACQ,eAAe,CAACkB,GAAD,CAAhB,CAAH;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAM5B,UAAU,CAACK,eAAe,CAACwB,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AAClC,QAAM9B,UAAU,CAACK,eAAe,CAAC0B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call, take } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport {googleSignInSuccess, googleSignInFail, emailSignInSuccess, emailSignInFail} from './user.actions'\n\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call(createUserProfileDocument(user))\n        const userSnapshot = yield userRef.get()\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data}))\n    } catch (error) {\n        yield put(googleSignInFail(error))\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument(user))\n        const userSnapshot = yield userRef.get()\n        yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data}))\n        \n    }catch(err) {\n        put(emailSignInFail(err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}