{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eihab/Developer/coden/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/eihab/Developer/coden/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/eihab/Developer/coden/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var firebaseConfig={apiKey:\"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",authDomain:\"coden-e5cdc.firebaseapp.com\",databaseURL:\"https://coden-e5cdc.firebaseio.com\",projectId:\"coden-e5cdc\",storageBucket:\"coden-e5cdc.appspot.com\",messagingSenderId:\"948826769697\",appId:\"1:948826769697:web:c3ec5586fb5fcde5fb5660\",measurementId:\"G-2K6EHCXZJ3\"};firebase.initializeApp(firebaseConfig);// firebase.analytics();\nexport var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user,additionalData){var userRef,snapshot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(user){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(user.uid));_context.next=5;return userRef.get();case 5:snapshot=_context.sent;if(snapshot.exists){_context.next=17;break;}displayName=user.displayName,email=user.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.error('Error creating user:',_context.t0);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","user","additionalData","userRef","firestore","doc","uid","get","snapshot","exists","displayName","email","createdAt","Date","set","console","error","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"qbAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,yCADW,CAEnBC,UAAU,CAAE,6BAFO,CAGnBC,WAAW,CAAE,oCAHM,CAInBC,SAAS,CAAE,aAJQ,CAKnBC,aAAa,CAAE,yBALI,CAMnBC,iBAAiB,CAAE,cANA,CAOnBC,KAAK,CAAE,2CAPY,CAQnBC,aAAa,CAAE,cARI,CAAvB,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,EACA;AAEA,MAAO,IAAMU,CAAAA,yBAAyB,0FAAG,iBAAOC,IAAP,CAAaC,cAAb,sKAChCD,IADgC,iEAE/BE,OAF+B,CAErBC,SAAS,CAACC,GAAV,iBAAuBJ,IAAI,CAACK,GAA5B,EAFqB,uBAGdH,CAAAA,OAAO,CAACI,GAAR,EAHc,QAG/BC,QAH+B,kBAKhCA,QAAQ,CAACC,MALuB,0BAM1BC,WAN0B,CAMJT,IANI,CAM1BS,WAN0B,CAMbC,KANa,CAMJV,IANI,CAMbU,KANa,CAO3BC,SAP2B,CAOf,GAAIC,CAAAA,IAAJ,EAPe,wCAUvBV,CAAAA,OAAO,CAACW,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,SAAS,CAATA,SAHE,EAICV,cAJD,EAVuB,0FAiB7Ba,OAAO,CAACC,KAAR,CAAc,sBAAd,cAjB6B,wCAqB9Bb,OArB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAwBP,MAAO,IAAMiB,CAAAA,IAAI,CAAG5B,QAAQ,CAAC4B,IAAT,EAAb,CACP,MAAO,IAAMb,CAAAA,SAAS,CAAGf,QAAQ,CAACe,SAAT,EAAlB,CAEP,GAAMc,CAAAA,QAAQ,CAAG,GAAI7B,CAAAA,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAACC,MAAM,CAAE,gBAAT,CAA7B,EAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",\n    authDomain: \"coden-e5cdc.firebaseapp.com\",\n    databaseURL: \"https://coden-e5cdc.firebaseio.com\",\n    projectId: \"coden-e5cdc\",\n    storageBucket: \"coden-e5cdc.appspot.com\",\n    messagingSenderId: \"948826769697\",\n    appId: \"1:948826769697:web:c3ec5586fb5fcde5fb5660\",\n    measurementId: \"G-2K6EHCXZJ3\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics();\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n    if (!user) return\n    const userRef = firestore.doc(`users/${user.uid}`)\n    const snapshot = await userRef.get()\n\n    if (!snapshot.exists) {\n        const {displayName, email} = user\n        const createdAt = new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(err) {\n            console.error('Error creating user:', err);\n        }\n    }\n\n    return userRef\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({prompt: 'select_account'})\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}