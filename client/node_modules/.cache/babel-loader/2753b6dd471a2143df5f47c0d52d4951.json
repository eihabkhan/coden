{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",\n  authDomain: \"coden-e5cdc.firebaseapp.com\",\n  databaseURL: \"https://coden-e5cdc.firebaseio.com\",\n  projectId: \"coden-e5cdc\",\n  storageBucket: \"coden-e5cdc.appspot.com\",\n  messagingSenderId: \"948826769697\",\n  appId: \"1:948826769697:web:c3ec5586fb5fcde5fb5660\",\n  measurementId: \"G-2K6EHCXZJ3\"\n};\nfirebase.initializeApp(firebaseConfig); // firebase.analytics();\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = user;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.error('Error creating user:', err);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objects) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objects.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","user","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","err","console","error","addCollectionAndDocuments","collectionKey","objects","collectionRef","collection","log","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD9kbvoNP1qeeNcfuWzaRxvuBIXMQaivWE\",\n    authDomain: \"coden-e5cdc.firebaseapp.com\",\n    databaseURL: \"https://coden-e5cdc.firebaseio.com\",\n    projectId: \"coden-e5cdc\",\n    storageBucket: \"coden-e5cdc.appspot.com\",\n    messagingSenderId: \"948826769697\",\n    appId: \"1:948826769697:web:c3ec5586fb5fcde5fb5660\",\n    measurementId: \"G-2K6EHCXZJ3\"\n}\n\nfirebase.initializeApp(firebaseConfig)\n// firebase.analytics();\n\nexport const createUserProfileDocument = async (user, additionalData) => {\n    if (!user) return\n    const userRef = firestore.doc(`users/${user.uid}`)\n    const snapshot = await userRef.get()\n    if (!snapshot.exists) {\n        const {displayName, email} = user\n        const createdAt = new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch(err) {\n            console.error('Error creating user:', err);\n        }\n    }\n\n    return userRef\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objects) => {\n    const collectionRef = firestore.collection(collectionKey)\n    console.log(collectionRef);\n\n    const batch = firestore.batch()\n    objects.forEach(obj => {\n        const newDocRef = collectionRef.doc()\n        batch.set(newDocRef, obj)         \n    })\n    return await batch.commit()\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const {title, items} = doc.data()\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    })\n\n    return transformedCollection.reduce((acc, collection) => {\n        acc[collection.title.toLowerCase()] = collection\n        return acc\n    }, {})\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({prompt: 'select_account'})\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}