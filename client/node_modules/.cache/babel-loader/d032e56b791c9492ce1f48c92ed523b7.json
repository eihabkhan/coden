{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/eihab/Developer/coden/src/pages/shop/Shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Collection from '../collection/Collection.component';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner.component';\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: Collection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/pages/shop/Shop.component.jsx"],"names":["React","Component","Route","connect","Collection","CollectionsOverview","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","Shop","state","isLoading","unsubFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBU,KADyB,GACjB;AACJC,MAAAA,SAAS,EAAE;AADP,KADiB;AAAA,SAKzBC,iBALyB,GAKL,IALK;AAAA;;AAOzBC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAIA,SAAKJ,iBAAL,GAAyBG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAChE,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACH,KAHwB,CAAzB;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAGlB;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEiB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEnB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5BwB;;AA+B7B,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAEY,cAAc,IAAIK,QAAQ,CAACjB,iBAAiB,CAACY,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCd,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Collection from '../collection/Collection.component'\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview.component'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/WithSpinner.component'\n\nclass Shop extends Component {\n    state = {\n        isLoading: true\n    }\n\n    unsubFromSnapshot = null\n\n    componentDidMount() {\n        const { updateCollections } = this.props\n        const collectionRef = firestore.collection('collections')\n\n\n\n        this.unsubFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            updateCollections(collectionsMap)\n        })\n    }\n\n    render() {\n        const {match} = this.props\n        return (\n            <div className='shop-page'> \n                <Route exact path={`${match.path}`} component= {CollectionsOverview} />\n                <Route path={`${match.path}/:collectionId`} component={Collection} />\n                {/* This allows to access categoryId as a parameter on the match object */} \n            </div>\n        )\n    };\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(Shop)"]},"metadata":{},"sourceType":"module"}