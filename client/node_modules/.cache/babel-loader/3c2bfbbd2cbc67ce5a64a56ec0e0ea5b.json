{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from '../redux/shop/shop.sagas';\nimport rootReducer from './RootReducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/redux/Store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAQC,qBAAR,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEA,SAAQA,KAAR,EAAeE,SAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\n\nimport {fetchCollectionsStart} from '../redux/shop/shop.sagas'\n\nimport rootReducer from './RootReducer'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(fetchCollectionsStart)\n\nconst persistor = persistStore(store)\n\nexport {store, persistor}"]},"metadata":{},"sourceType":"module"}