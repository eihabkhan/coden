{"ast":null,"code":"import{combineReducers}from'redux';import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';// This is the actual localStorage object on the window object\nimport userReducer from'./user/user.reducer';import cartReducer from'./cart/cart.reducer';import directoryReducer from'./directory/directory.reducer';import shopReducer from'./shop/shop.reducer';var persistConfig={key:'root',// Where in our reducer do we want to store everything\nstorage:storage,// this tells where we want to store, which in our case is the localStorage\nwhiteList:['cart']// Array of the string names of any reducers we want to store. !The names in the array are the same keys in combineReducers\n};var rootReducer=combineReducers({user:userReducer,cart:cartReducer,directory:directoryReducer,shop:shopReducer});export default persistReducer(persistConfig,rootReducer);","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/redux/RootReducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whiteList","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,OAASA,eAAT,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAAgD;AAEhD,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CACL;AACbN,OAAO,CAAPA,OAFkB,CAET;AACTO,SAAS,CAAC,CAAC,MAAD,CAAS;AAHD,CAAtB,CAMA,GAAMC,CAAAA,WAAW,CAAGV,eAAe,CAAC,CAChCW,IAAI,CAAER,WAD0B,CAEhCS,IAAI,CAAER,WAF0B,CAGhCS,SAAS,CAAER,gBAHqB,CAIhCS,IAAI,CAAER,WAJ0B,CAAD,CAAnC,CAOA,cAAeL,CAAAA,cAAc,CAACM,aAAD,CAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // This is the actual localStorage object on the window object\n\nimport userReducer from './user/user.reducer'\nimport cartReducer from './cart/cart.reducer'\nimport directoryReducer from './directory/directory.reducer'\nimport shopReducer from './shop/shop.reducer'\n\nconst persistConfig = {\n    key: 'root', // Where in our reducer do we want to store everything\n    storage, // this tells where we want to store, which in our case is the localStorage\n    whiteList:['cart'] // Array of the string names of any reducers we want to store. !The names in the array are the same keys in combineReducers\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer) "]},"metadata":{},"sourceType":"module"}