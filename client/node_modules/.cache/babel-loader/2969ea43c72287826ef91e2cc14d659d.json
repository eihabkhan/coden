{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // This is the actual localStorage object on the window object\n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nconst persistConfig = {\n  key: 'root',\n  // Where in our reducer do we want to store everything\n  storage,\n  // this tells where we want to store, which in our case is the localStorage\n  whiteList: ['cart'] // Array of the string names of any reducers we want to store. !The names in the array are the same keys in combineReducers\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/eihab/Developer/coden/src/redux/RootReducer.js"],"names":["combineReducers","persistReducer","persistStore","storage","userReducer","cartReducer","persistConfig","key","whiteList","rootReducer","user","cart"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAEhD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AACL;AACbJ,EAAAA,OAFkB;AAET;AACTK,EAAAA,SAAS,EAAC,CAAC,MAAD,CAHQ,CAGC;;AAHD,CAAtB;AAMA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,IAAI,EAAEN,WAD0B;AAEhCO,EAAAA,IAAI,EAAEN;AAF0B,CAAD,CAAnC;AAKA,eAAeJ,cAAc,CAACK,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // This is the actual localStorage object on the window object\n\nimport userReducer from './user/user.reducer'\nimport cartReducer from './cart/cart.reducer'\n\nconst persistConfig = {\n    key: 'root', // Where in our reducer do we want to store everything\n    storage, // this tells where we want to store, which in our case is the localStorage\n    whiteList:['cart'] // Array of the string names of any reducers we want to store. !The names in the array are the same keys in combineReducers\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer)"]},"metadata":{},"sourceType":"module"}